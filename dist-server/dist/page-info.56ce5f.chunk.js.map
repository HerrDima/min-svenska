{"version":3,"file":"page-info.56ce5f.chunk.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,uBAAuB;AAMR;AAC6E;AAC5F,wDAAwD;AAEe;AACV;AAC7D,0DAA0D;AACC;AAC4D;AAC7E;AAE1C,OAAO,CAAC,GAAG,CAAC,6EAAS,CAAC,CAAC;AAEvB;;;;;;;;EAQE;AAEF,oDAAoD;AACrC,SAAS,IAAI;IACxB,MAAM,EAAC,kBAAkB,EAAC,GAAG,oFAAS,EAAE,CAAC;IACzC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,+CAAQ,CAAU,KAAK,CAAC,CAAC;IAErD,MAAM,EACF,UAAU;IACV,0DAA0D;MAC7D,GAAG,4DAAS,EAAE,CAAC;IAEhB;;;;;;;;;;EAUF;IAEE,MAAM,EACF,MAAM,EAAE,uBAAuB;IAC/B,KAAK,EAAE,uBAAuB;MACjC,GAAG,gEAAa,EAAE,CAAC;IAEpB,MAAM,WAAW,GAAG,iEAAc,EAAE,CAAC,CAAC,uBAAuB;IAC7D,MAAM,YAAY,GAAG,kEAAe,EAAE,CAAC,CAAC,uBAAuB;IAE/D,gDAAS,CAAC,GAAG,EAAE;QACX,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACZ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,SAAS,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC,CAAC;IAER,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAE7B,OAAO,CACH,4EACI,6EAAI,SAAS,EAAE,wFAAqB,uCAAgB,EAIpD,0EAAM,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,WAAO,EAChD,0EAAM,IAAI,CAAC,SAAS,CAAC,EAAC,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,KAAK,EAAC,EAAE,IAAI,EAAE,CAAC,CAAC,WAAO,EAEhF,uDAAC,6EAAM,IAAC,SAAS,EAAC,eAAe,WAAG,EAEpC,yEAAK,kBAAkB,CAAC,eAAe,CAAC,WAAM,EAE9C,gEAAK,GAAG,EAAC,EAAE,EAAC,GAAG,EAAE,2DAAW,WAAI,EAEhC,gEAAK,GAAG,EAAC,EAAE,EAAC,GAAG,EAAE,kGAAW,WAAI,EAEhC,uDAAC,sGAAmB,aAAG,YAUrB,CACT,CAAC;AACN,CAAC","sources":["webpack://typescript-project/./www/page/info/info.tsx"],"sourcesContent":["/* global setTimeout */\n\nimport {\n    // lazy,\n    useEffect,\n    useState,\n} from 'react';\nimport {useSystem, useScreenHeight, useScreenWidth, useScreenSize} from 'react-system-hook';\n// import {NavigationLink} from 'react-router-dom-hook';\n\nimport {Locale, useLocale} from '../../provider/locale/locale-context';\nimport {ErrorData} from '../../layout/error-data/error-data';\n// import {appRoute} from '../../component/app/app-route';\nimport pngImageSrc from '../home/image/marker-icon-2x.png';\nimport svgImageSrc, {ReactComponent as SvgAsReactComponent} from '../home/image/questions-with-an-official-answer.svg';\nimport homeStyle from '../home/home.scss';\n\nconsole.log(ErrorData);\n\n/*\nconst LoadMeAsyncLazy = lazy(\n    () =>\n        import(\n            /!* webpackChunkName: 'load-me-async-lazy' *!/\n            '../../component/load-me-async-lazy/load-me-async-lazy'\n        )\n);\n*/\n\n// eslint-disable-next-line import/no-default-export\nexport default function Info(): JSX.Element {\n    const {getLocalizedString} = useLocale();\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n\n    const {\n        screenInfo,\n        // isBrowser, // true if running in browser, false for SSR\n    } = useSystem();\n\n    /*\n    const {\n        devicePixelRatio, // number, default: 2, usually is 2 for smartphones\n        isLandscape, // true if width > height\n        isMobile, // screen width < 768\n        isPortrait, // opposite for isLandscape\n        name, // ScreenWidthNameEnum, relative from screen width: 'desktop', 'mobile' or 'tablet'\n        isTablet, // screen width < 980 and >= 768\n        isDesktop, // screen width >= 980\n    } = screenInfo;\n*/\n\n    const {\n        height, // number, default: 768\n        width, // number, default: 980\n    } = useScreenSize();\n\n    const screenWidth = useScreenWidth(); // number, default: 980\n    const screenHeight = useScreenHeight(); // number, default: 768\n\n    useEffect(() => {\n        console.log('info');\n    });\n\n    setTimeout(() => {\n        console.log(isOpen);\n        setIsOpen(false);\n    }, 1e3);\n\n    console.log('evaluate info');\n\n    return (\n        <div>\n            <h1 className={homeStyle.home_header}>info page</h1>\n\n            {/* <NavigationLink to={appRoute.root.path}>to home</NavigationLink>*/}\n\n            <pre>{JSON.stringify(screenInfo, null, 4)}</pre>\n            <pre>{JSON.stringify({height, screenHeight, screenWidth, width}, null, 4)}</pre>\n\n            <Locale stringKey=\"BUTTON__APPLY\" />\n\n            <h4>{getLocalizedString('BUTTON__APPLY')}</h4>\n\n            <img alt=\"\" src={pngImageSrc} />\n\n            <img alt=\"\" src={svgImageSrc} />\n\n            <SvgAsReactComponent />\n\n            {/* <Spinner position=\"absolute\" />*/}\n            {/* <LoadMeAsyncLazy smth=\"info\" />*/}\n\n            {/*\n            <Suspense fallback={<Spinner position=\"absolute\" />}>\n                <LoadMeAsyncLazy smth=\"info\" />\n            </Suspense>\n*/}\n        </div>\n    );\n}\n"],"names":[],"sourceRoot":""}